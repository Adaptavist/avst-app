#!/bin/bash
# Copyright 2015 Adaptavist.com Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Bash shell script, Adapavist application manager

# Exit on error
set -e

# Treat using unset variables as an error
set -u

THIS_COMMAND=$( basename ${0} )
# Import our system default config
# Note: this needs to be done separately to env.sh, to allow for alternate install locations
[[ -r /etc/default/avst-app ]] && . /etc/default/avst-app
SHARE_DIR=${SHARE_DIR:-"/usr/share/avst-app"}
BASE_DIR=${BASE_DIR:-"/opt"}
INSTANCE_USER=${INSTANCE_USER:-"adapta"}
INSTANCE_GROUP=${INSTANCE_GROUP:-"adapta"}

# Import helper functions
. "${SHARE_DIR}/lib/common/helpers.sh"

# TODO: We need a way of showing the version installed
function usage () {
    # TODO: Better param handling - at least be able to add debug levels and/or verbose on the cmdline
    info "${THIS_COMMAND} [--debug] <service name> <command> [<params>]"
}

# Basic option handling
while (( $# > 0 ))
do
    opt="$1"

    case $opt in
        --help)
            usage
            exit 0
            ;;
        --debug)
            DEBUG=1
            # -e will echo command before execution, see man augtool
            AUGTOOL_DEBUG="-e"
            ;;
        --allow-downgrade)
            ALLOW_DOWNGRADE=1
            ;;
        --force)
            FORCE=1
            ALLOW_DOWNGRADE=1
            ;;
        --allow-git-avst-keeper)
            GIT_AVST_KEEPER=1
            ;;
        --*)
            fatal "${THIS_COMMAND}: Invalid option: '$opt'"
            exit 1
            ;;
        *)
            # end of long options
            break;
            ;;
    esac
    shift # do this after the case statements, so the first param is not lost!
done

# Check we have 2 non-zero params
if [[ -z "${1:-}" || -z "${2:-}" ]]; then
    fatal "At least Service Name and Command must be provided..."
    usage
    exit 10
fi

INSTANCE_NAME="$1"
shift

_CMD="$1"
shift

INSTANCE_DIR="${INSTANCE_DIR:-${BASE_DIR}/${INSTANCE_NAME}}"
if [[ ! -d "${INSTANCE_DIR}" ]]; then
    fatal "${THIS_COMMAND}: Service ${INSTANCE_NAME} (${INSTANCE_DIR}): does not exist"
    usage
    exit 15
fi

# Keep the original paramaters passed as a global for future use
PARAMS=$@
debug "${THIS_COMMAND}: Additional paramaters are: \"${PARAMS}\""

# Import all other environment (Note: this needs INSTANCE_NAME)
. "${SHARE_DIR}/lib/common/env.sh"

STATE="uninstalled"
if [[ -r "${INSTANCE_DIR}/.state" ]]; then
    STATE=$( head -1 "${INSTANCE_DIR}/.state" )
fi

if [[ "${_CMD}" == "destroy" ]]; then
    debug "Removing everything from ${INSTANCE_DIR}!!!"
else
    check_avstapp_version
    case ${STATE} in
        uninstalled)
            case ${_CMD} in
                prepare)
                    ;;
                regeneraterc)
                    ;;
                restore)
                    ;;
                install)
                    ;;
                *)
                    fatal "${THIS_COMMAND}: Instance is not yet installed, please run install first"
                    exit 5
                    ;;
            esac
            ;;
        installed)
            case ${_CMD} in
                install)
                    info "${THIS_COMMAND}: Application is already installed"
                    exit 0
                    ;;
                modify)
                    ;;
                regeneraterc)
                    ;;
                restore)
                    ;;
                upgrade)
                    fatal "${THIS_COMMAND}: Application is installed but not yet modified, please run modify first. Or destroy and install with new version"
                    exit 6
                    ;;
                *)
                    fatal "${THIS_COMMAND}: Application is installed but not yet modified, please run modify first"
                    exit 5
                    ;;
            esac
            ;;
        upgrading)
            case ${_CMD} in
                uninstalled)
                    info "${THIS_COMMAND}: Application is not installed. Use install instead."
                    exit 3
                    ;;
                install)
                    ;;
                restore)
                    ;;
                modify)
                    info "${THIS_COMMAND}: Application failed while upgrading, fix the problem and rerun upgrade, or destroy and start again."
                    exit 6
                    ;;
                upgrade)
                    ;;
                *)
                    fatal "${THIS_COMMAND}: Application is installed but not yet modified, please run modify first"
                    exit 5
                    ;;
            esac
            ;;
        modified)
            case ${_CMD} in
                install)
                    info "${THIS_COMMAND}: Application is already installed"
                    exit 0
                    ;;
                modify)
                    ;;
                regeneraterc)
                    ;;
                upgrade)
                    ;;
                restore)
                    ;;
                start)
                    if [[ `stat -c%Y "${INSTANCE_DIR}/.state"` < `stat -c%Y "${INSTANCE_DIR}/avst-app.cfg.sh"` ]]; then
                      fatal "There are recent changes in avst-app.cfg.sh configuration file, please run 'modify' command first to take effect."
                      exit 23
                    fi
                    ;;
                *)
                    ;;
            esac
            ;;
    esac
fi

function create_script_list () {
    case ${_CMD} in
        start|modify|stop)
            find_scripts "${INSTANCE_DIR}/avst-app/rc/${_CMD}"
            ;;
        *)
            # Add additional directories that may contain the command
            if [[ ! -z "${ADDITIONAL_CFGS:-}" ]]; then
                for _dir in ${ADDITIONAL_CFGS} ; do
                  ADDITIONAL_DIRS="${ADDITIONAL_DIRS:-} \"${_dir}/${_CMD}\""
                done
            fi
            find_scripts \
                "${SHARE_DIR}/lib/common/${_CMD}" \
                "${SHARE_DIR}/lib/product/${PRODUCT}/${_CMD}" \
                $( eval echo ${ADDITIONAL_DIRS:-} ) \
                "${INSTANCE_DIR}/avst-app/lib/${_CMD}"
            ;;
    esac
}

# Run the command
RUN=0
info "${THIS_COMMAND}: running: $_CMD"
for script in $( eval echo $( create_script_list ) ) ; do
    debug "${THIS_COMMAND}: ${_CMD}: running \"${script}\""
    . "${script}"
    RUN=1 #At least one script has been run
done

debug "avst-app: Settings to be used after command \"${_CMD}\": \n"
print_log "${_CMD}"

if [[ 0 = $RUN ]]; then
    fatal "${THIS_COMMAND}: $_CMD: command not known"
    usage
    exit 20
fi
push_change_history "${THIS_COMMAND}: completed: $_CMD"
info "${THIS_COMMAND}: completed: $_CMD"

